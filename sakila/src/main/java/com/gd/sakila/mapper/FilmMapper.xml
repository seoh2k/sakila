<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.sakila.mapper.FilmMapper"> 
	<!-- 영화 전체 수 -->
	<select id="getFilmTotalCount" resultType="int">
		SELECT 
			count(*) totalCnt
		FROM film
	</select>
	
	<!-- 영화 대여 -->
	<select id="selectRentalRate" parameterType="Integer" resultType="double">
		SELECT 
			rental_rate
		FROM film f, inventory i
		WHERE f.film_id = i.film_id AND i.inventory_id = #{inventoryId}
	</select>
	
	<!-- 영화 제목 선택 -->
	<select id="selectFilmTitleList" resultType="map">
		SELECT 
			film_id,
			title
		FROM film
	</select>
	
	<insert id="insertFilmCategory"
			parameterType="java.util.Map">
		INSERT INTO film_category(
			film_id,
			category_id
		) VALUES(
			#{filmId},
			#{categoryId}
		)			
	</insert>
	
	<insert id="insertFilm"
			parameterType="com.gd.sakila.vo.Film">
		<!-- selectKey : insert 시에 autoincrement 기능이 가능하도록 함, 
			insert를 실행하고 있을 때는 다른 쿼리가 실행되지 않도록 lock을 거는 기능 -->
		<!-- selectKey사용: SELECT LAST_INSERT_ID()->마지막으로 입력된 값, order="AFTER" -> Insert 후에 Select 진행-->
		<!-- 영화 추가 -->
		<selectKey keyProperty="filmId" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID() 
		</selectKey>	
		INSERT INTO film(
			title,
			description,
			release_year,
			language_id,
			original_language_id,
			rental_duration,
			rental_rate,
			length,
			replacement_cost,
			rating,
			special_features
		) VALUES (
			#{title},
			#{description},
			#{releaseYear},
			#{languageId},
			#{originalLanguageId},
			#{rentalDuration},
			#{rentalRate},
			#{length},
			#{replacementCost},
			#{rating},
			#{specialFeatures}
		)	
	</insert>
	 <!-- insert 폼에서 받아온 정보들은 filmId를 제외하고 입력이 진행됨(매개변수에 filmId가 없기 때문에), 
	 		selectKey를 통해서 select 된 key 값이 폼 입력이 진행되고 난 후에 filmId 자리에 입력되게 됨 -->
	
	<!-- 영화에 따른 배우 리스트 -->
	<select id="selectFilmActorListByFilm"
			parameterType="int"
			resultType="java.util.Map">
		SELECT 
			a.actor_id actorId, 
			CONCAT(first_name, ' ', last_name) name, 
			film_id filmId
		FROM actor a LEFT JOIN (SELECT *
								FROM film_actor
								WHERE film_id = #{filmId}) t
		ON a.actor_id = t.actor_id
		ORDER BY first_name ASC
	</select>
	
	<select id="selectFilmOne" parameterType="Integer" resultType="java.util.Map">
		SELECT 
			f.film_id filmId,
			f.title title,
			f.description description,
			f.release_year releaseYear,
			l.name language,
			f.original_language_id originalLanguageId,
			f.rental_duration rentalDuration,
			f.rental_rate rentalRate,
			f.length length,
			f.replacement_cost replacementCost,
			f.rating rating,
			f.special_features specialFeatures,
			f.last_update lastUpdate, 
			fl.actors actors,
			fl.category category
		FROM film f
		LEFT JOIN film_list fl ON f.film_id = fl.FID
		JOIN language l ON f.language_id = l.language_id
		WHERE
			FID = #{FID}
	</select>
	
	<select id="selectFilmList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
			FID,
			title,
			category,
			price,
			rating,
			actors
		FROM film_list
		<where> <!-- where 태그를 사용하도록 한다. where절 쓰지 않고 -->
			<if test="categoryName != null"> <!-- 자바식 코드 사용 -->
				AND category = #{categoryName} <!-- and나 or가 나올 수 있다. -->
			</if>
			<if test="price != null">
				AND price = #{price} 
			</if>
			<if test="title != null">
				AND title LIKE CONCAT('%', #{title}, '%')
			</if>
			<if test="rating != null">
				AND rating = #{rating}
			</if>
			<if test="actors != null">
				AND actors LIKE CONCAT('%',#{actors},'%') <!-- 널이 들어가면 안된다. 차라리 공백이 들어간다. -->
			</if>
		</where>
		ORDER BY FID ASC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<select id="selectFilmTotal" parameterType="java.util.Map" resultType="Integer">
		SELECT COUNT(*) FROM film_list
		<where>
			<if test="categoryName != null"> <!-- 자바식 코드 사용 -->
				AND category = #{categoryName} <!-- and나 or가 나올 수 있다. -->
			</if>
			<if test="price != null">
				AND price = #{price} 
			</if>
			<if test="title != null">
				AND title LIKE CONCAT('%', #{title}, '%')
			</if>
			<if test="rating != null">
				AND rating = #{rating}
			</if>
			<if test="actors != null">
				AND actors LIKE CONCAT('%',#{actors},'%') <!-- 널이 들어가면 안된다. 차라리 공백이 들어간다. -->
			</if>
		</where>
	</select>
	
	<!-- Map: filmId(in), storeId(in), filmCount(out) -->
	<select id="selectFilmInStock" 
		parameterType="java.util.Map"
		resultType="int"
		statementType="CALLABLE">
		{
			call film_in_stock(
				#{filmId},
				#{storeId},
				#{filmCount, mode=OUT, jdbcType=DECIMAL, javaType=Integer}
			)
		}
	</select>

</mapper>